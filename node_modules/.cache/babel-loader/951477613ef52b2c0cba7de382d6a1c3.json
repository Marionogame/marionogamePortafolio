{"ast":null,"code":"/*\r\nCopyright (c) 2018-2020 Uber Technologies, Inc.\r\n\r\nThis source code is licensed under the MIT license found in the\r\nLICENSE file in the root directory of this source tree.\r\n*/\n\n/**\r\n * Helper function that generates media queries based on breakpoint, e.g.\r\n * getMediaQuery(720) => '@media screen and (min-width: 720px)'\r\n */\nexport var getMediaQuery = function getMediaQuery(breakpoint) {\n  return \"@media screen and (min-width: \".concat(breakpoint, \"px)\");\n};\nexport var getMediaQueries = function getMediaQueries(breakpoints) {\n  return Object.keys(breakpoints).map(function (key) {\n    return breakpoints[key];\n  }).sort(function (a, b) {\n    return a - b;\n  }).map(getMediaQuery);\n};","map":{"version":3,"sources":["C:/Users/Mario Espaillat/Desktop/Nueva carpeta (2)/marionogamePortafolio/node_modules/baseui/esm/helpers/responsive-helpers.js"],"names":["getMediaQuery","breakpoint","concat","getMediaQueries","breakpoints","Object","keys","map","key","sort","a","b"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,IAAIA,aAAa,GAAG,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;AAC5D,SAAO,iCAAiCC,MAAjC,CAAwCD,UAAxC,EAAoD,KAApD,CAAP;AACD,CAFM;AAGP,OAAO,IAAIE,eAAe,GAAG,SAASA,eAAT,CAAyBC,WAAzB,EAAsC;AACjE,SAAOC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,GAAzB,CAA6B,UAAUC,GAAV,EAAe;AACjD,WAAOJ,WAAW,CAACI,GAAD,CAAlB;AACD,GAFM,EAEJC,IAFI,CAEC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtB,WAAOD,CAAC,GAAGC,CAAX;AACD,GAJM,EAIJJ,GAJI,CAIAP,aAJA,CAAP;AAKD,CANM","sourcesContent":["/*\r\nCopyright (c) 2018-2020 Uber Technologies, Inc.\r\n\r\nThis source code is licensed under the MIT license found in the\r\nLICENSE file in the root directory of this source tree.\r\n*/\r\n\r\n/**\r\n * Helper function that generates media queries based on breakpoint, e.g.\r\n * getMediaQuery(720) => '@media screen and (min-width: 720px)'\r\n */\r\nexport var getMediaQuery = function getMediaQuery(breakpoint) {\r\n  return \"@media screen and (min-width: \".concat(breakpoint, \"px)\");\r\n};\r\nexport var getMediaQueries = function getMediaQueries(breakpoints) {\r\n  return Object.keys(breakpoints).map(function (key) {\r\n    return breakpoints[key];\r\n  }).sort(function (a, b) {\r\n    return a - b;\r\n  }).map(getMediaQuery);\r\n};"]},"metadata":{},"sourceType":"module"}